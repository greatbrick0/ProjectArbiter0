// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using UnityEngine;
	using Coherence.Toolkit;
	using Coherence.Toolkit.Bindings;
	using Coherence.Entity;
	using Coherence.ProtocolDef;
	using Coherence.Brook;
	using Coherence.Toolkit.Bindings.ValueBindings;
	using Coherence.Toolkit.Bindings.TransformBindings;
	using Coherence.Connection;
	using Coherence.Log;
	using Logger = Coherence.Log.Logger;
	using UnityEngine.Scripting;

	public class Binding_fa09ed3793686b64892f5ef5cecc24d3_ad052b36_8428_4e94_837c_683360423672 : PositionBinding
	{
		public override string CoherenceComponentName => "WorldPosition";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Vector3 Value
		{
			get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
			set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
		{
			var value = ((WorldPosition)coherenceComponent).value;
			if (!coherenceSync.HasParentWithCoherenceSync)
            {
                value += floatingOriginDelta;
            }
			return value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
		{
			var update = (WorldPosition)coherenceComponent;
			if (RuntimeInterpolationSettings.IsInterpolationNone) 
			{
				update.value = Value;
			}
			else 
			{
				update.value = GetInterpolatedAt(time);
			}
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new WorldPosition();
		}
	}

	public class Binding_fa09ed3793686b64892f5ef5cecc24d3_f9c90ca9_c7fb_4cbc_ad50_dcf60967aa97 : Vector3Binding
	{
		private global::UnityEngine.Rigidbody CastedUnityComponent;

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (global::UnityEngine.Rigidbody)UnityComponent;
		}
		public override string CoherenceComponentName => "PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Rigidbody_8767625517853087872";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Vector3 Value
		{
			get { return (UnityEngine.Vector3)(CastedUnityComponent.velocity); }
			set { CastedUnityComponent.velocity = (UnityEngine.Vector3)(value); }
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
		{
			var value = ((PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Rigidbody_8767625517853087872)coherenceComponent).velocity;
			return value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
		{
			var update = (PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Rigidbody_8767625517853087872)coherenceComponent;
			if (RuntimeInterpolationSettings.IsInterpolationNone) 
			{
				update.velocity = Value;
			}
			else 
			{
				update.velocity = GetInterpolatedAt(time);
			}
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Rigidbody_8767625517853087872();
		}
	}

	public class Binding_fa09ed3793686b64892f5ef5cecc24d3_28489733_4c61_4578_963c_a2671af88f7c : DeepRotationBinding
	{
		private global::UnityEngine.Transform CastedUnityComponent;

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
		}
		public override string CoherenceComponentName => "PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625517853087900";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Quaternion Value
		{
			get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
			set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
		}

		protected override Quaternion ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
		{
			var value = ((PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625517853087900)coherenceComponent).rotation;
			return value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
		{
			var update = (PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625517853087900)coherenceComponent;
			if (RuntimeInterpolationSettings.IsInterpolationNone) 
			{
				update.rotation = Value;
			}
			else 
			{
				update.rotation = GetInterpolatedAt(time);
			}
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625517853087900();
		}
	}

	public class Binding_fa09ed3793686b64892f5ef5cecc24d3_8d37736e_beb0_47e2_ae54_e04119544f8e : DeepRotationBinding
	{
		private global::UnityEngine.Transform CastedUnityComponent;

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
		}
		public override string CoherenceComponentName => "PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625518038105026";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Quaternion Value
		{
			get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
			set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
		}

		protected override Quaternion ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
		{
			var value = ((PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625518038105026)coherenceComponent).rotation;
			return value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
		{
			var update = (PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625518038105026)coherenceComponent;
			if (RuntimeInterpolationSettings.IsInterpolationNone) 
			{
				update.rotation = Value;
			}
			else 
			{
				update.rotation = GetInterpolatedAt(time);
			}
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625518038105026();
		}
	}

	public class Binding_fa09ed3793686b64892f5ef5cecc24d3_7b403a63_4eba_4e9a_878d_2ff933d60337 : DeepPositionBinding
	{
		private global::UnityEngine.Transform CastedUnityComponent;

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
		}
		public override string CoherenceComponentName => "PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625518038105026";

		public override uint FieldMask => 0b00000000000000000000000000000010;

		public override Vector3 Value
		{
			get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
			set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
		{
			var value = ((PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625518038105026)coherenceComponent).position;
			return value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
		{
			var update = (PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625518038105026)coherenceComponent;
			if (RuntimeInterpolationSettings.IsInterpolationNone) 
			{
				update.position = Value;
			}
			else 
			{
				update.position = GetInterpolatedAt(time);
			}
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new PlayerContainer_fa09ed3793686b64892f5ef5cecc24d3_UnityEngine__char_46_Transform_8767625518038105026();
		}
	}


	[Preserve]
	public class CoherenceSyncPlayerContainer_fa09ed3793686b64892f5ef5cecc24d3 : CoherenceSyncBaked
	{
		private SerializeEntityID entityId;
		private Logger logger = Log.GetLogger<CoherenceSyncPlayerContainer_fa09ed3793686b64892f5ef5cecc24d3>();

		// Cached targets for commands

		private IClient client;
		private CoherenceBridge bridge;

		private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
		{
			["ad052b36-8428-4e94-837c-683360423672"] = new Binding_fa09ed3793686b64892f5ef5cecc24d3_ad052b36_8428_4e94_837c_683360423672(),
			["f9c90ca9-c7fb-4cbc-ad50-dcf60967aa97"] = new Binding_fa09ed3793686b64892f5ef5cecc24d3_f9c90ca9_c7fb_4cbc_ad50_dcf60967aa97(),
			["28489733-4c61-4578-963c-a2671af88f7c"] = new Binding_fa09ed3793686b64892f5ef5cecc24d3_28489733_4c61_4578_963c_a2671af88f7c(),
			["8d37736e-beb0-47e2-ae54-e04119544f8e"] = new Binding_fa09ed3793686b64892f5ef5cecc24d3_8d37736e_beb0_47e2_ae54_e04119544f8e(),
			["7b403a63-4eba-4e9a-878d-2ff933d60337"] = new Binding_fa09ed3793686b64892f5ef5cecc24d3_7b403a63_4eba_4e9a_878d_2ff933d60337(),
		};

		private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings =
			new Dictionary<string, Action<CommandBinding, CommandsHandler>>();

		public CoherenceSyncPlayerContainer_fa09ed3793686b64892f5ef5cecc24d3()
		{
		}

		public override Binding BakeValueBinding(Binding valueBinding)
		{
			if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
			{
				valueBinding.CloneTo(bakedBinding);
				return bakedBinding;
			}

			return null;
		}

		public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
		{
			if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
			{
				commandBindingBaker.Invoke(commandBinding, commandsHandler);
			}
		}

		public override List<ICoherenceComponentData> CreateEntity(bool usesLodsAtRuntime, string archetypeName)
		{
			if (!usesLodsAtRuntime)
			{
				return null;
			}

			if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
			{
				var components = new List<ICoherenceComponentData>()
				{
					new ArchetypeComponent
					{
						index = archetypeIndex
					}
				};

				return components;
			}
	
			logger.Warning($"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");

			return null;
		}

		public override void Dispose()
		{
		}

		public override void Initialize(SerializeEntityID entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
		{
			this.logger = logger.With<CoherenceSyncPlayerContainer_fa09ed3793686b64892f5ef5cecc24d3>();
			this.bridge = bridge;
			this.entityId = entityId;
			this.client = client;
		}

		public override void ReceiveCommand(IEntityCommand command)
		{
			switch(command)
			{
				default:
					logger.Warning($"[CoherenceSyncPlayerContainer_fa09ed3793686b64892f5ef5cecc24d3] Unhandled command: {command.GetType()}.");
					break;
			}
		}
	}
}
